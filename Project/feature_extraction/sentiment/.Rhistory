i = 1
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
name
View(sample_articles)
remove(sample_articles)
for (i in 1:7368){
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- read.table(name,what='character',encoding='UTF-8')
t <- str_replace_all(t,'\n','')
text[i] <- t
}
?read.table
name
t <- read.table(name,encoding='UTF-8')
t
t <- read.table(name,encoding='UTF-8', sep="\t")
t
t <- read.table(name,encoding='UTF-8', sep="\001")
t
for (i in 1:7368){
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- read.table(name,encoding='UTF-8', sep="\001")
t <- str_replace_all(t,'\n','')
text[i] <- t
}
write.csv(text,'articles.csv',row.names=FALSE)
library(stringr)
for (i in 1:7368){
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- read.table(name,encoding='UTF-8', sep="\001")
t <- str_replace_all(t,'\n','')
text[i] <- t
}
t = list()
for (i in 1:7368){
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- read.table(name,encoding='UTF-8', sep="\001")
t <- str_replace_all(t,'\n','')
text[i] <- t
}
t <- read.table(name,encoding='UTF-8', sep="\001")
text <- Data.Frame()
text <- data.frame()
text = rbind(text, t)
text
text <- data.frame()
for (i in 1:7368){
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- read.table(name,encoding='UTF-8', sep="\001")
t <- str_replace_all(t,'\n','')
text = rbind(text, t)
text[i] <- t
}
name
t <- read.table(name,encoding='UTF-8', sep="\001")
?try
for (i in 42:7368){
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- try(read.table(name,encoding='UTF-8', sep="\001"))
t <- str_replace_all(t,'\n','')
text = rbind(text, t)
text[i] <- t
}
i = 1
t <- read.table(name,encoding='UTF-8', sep="\001")
t
t <- data.frame(V1 = c('NA'))
t
text <- data.frame()
for (i in 1:7368){
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
a <- read.table(name,encoding='UTF-8', sep="\001")
}, warning=function(w) {
a<- data.frame(V1 = c('NA'))
}, error=function(e) {
a <-data.frame(V1 = c('NA'))
}, finally = {
return(a)
})
t <- str_replace_all(t,'\n','')
text = rbind(text, t)
text[i] <- t
}
text <- data.frame()
for (i in 1:7368){
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
read.table(name,encoding='UTF-8', sep="\001")
}, warning=function(w) {
return(data.frame(V1 = c('NA')))
}, error=function(e) {
return(data.frame(V1 = c('NA')))
}, finally = {
})
t <- str_replace_all(t,'\n','')
text = rbind(text, t)
text[i] <- t
}
head(text)
i = 1
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
read.table(name,encoding='UTF-8', sep="\001")
}, warning=function(w) {
return(data.frame(V1 = c('NA')))
}, error=function(e) {
return(data.frame(V1 = c('NA')))
}, finally = {
})
t
t <- str_replace_all(t,'\n','')
t
?str_replace_all
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
read.table(name,encoding='UTF-8', sep="\001")
}, warning=function(w) {
return(data.frame(V1 = c('NA')))
}, error=function(e) {
return(data.frame(V1 = c('NA')))
}, finally = {
})
typeof(t)
t
t <- as.character(t)
t
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
read.table(name,encoding='UTF-8', sep="\001")
}, warning=function(w) {
return(data.frame(V1 = c('NA')))
}, error=function(e) {
return(data.frame(V1 = c('NA')))
}, finally = {
})
t
t$V1
t$V1[1]
t$V1[1] <- str_replace_all(t$V1[1], '\n', '')
t
text <- data.frame()
for (i in 1:7368){
print(i)
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
read.table(name,encoding='UTF-8', sep="\001")
}, warning=function(w) {
return(data.frame(V1 = c('NA')))
}, error=function(e) {
return(data.frame(V1 = c('NA')))
}, finally = {
})
t$V1[1] <- str_replace_all(t$V1[1], '\n', '')
text = rbind(text, t)
}
print t
t
text
t
i
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
read.table(name,encoding='UTF-8', sep="\001")
}, warning=function(w) {
return(data.frame(V1 = c('NA')))
}, error=function(e) {
return(data.frame(V1 = c('NA')))
}, finally = {
})
t
read.table(name,encoding='UTF-8', sep="\001")
read.table('../../text_scraping/article_text/173.txt', sep='')
read.table(paste('../../text_scraping/article_text/173.txt', sep=''))
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8')
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="\001")
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="\00")
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="\0")
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="tttt")
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="")
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="?")
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="p")
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="")
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep=",")
read.table(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="\001")
read.delim(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="\001")
?read.delim
read.delim(paste('../../text_scraping/article_text/173.txt', sep=''),encoding='utf-8', sep="\001", head=F)
text <- data.frame()
for (i in 1:7368){
print(i)
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
read.delim(name,encoding='UTF-8', sep="\001", head=F)
}, warning=function(w) {
return(data.frame(V1 = c('NA')))
}, error=function(e) {
return(data.frame(V1 = c('NA')))
}, finally = {
})
t$V1[1] <- str_replace_all(t$V1[1], '\n', '')
text = rbind(text, t)
}
name
read.delim(name,encoding='UTF-8', sep="\001", head=F)
read.delim(name,encoding='UTF-8', sep="", head=F)
read.delim(name,encoding='UTF-8', sep="\t", head=F)
read.table(name,encoding='UTF-8', sep="\t", head=F)
read.table(name, sep="\t", head=F)
read.delim(name,encoding='UTF-8', sep="\001", head=F)
read.csv(name,encoding='UTF-8', sep="\001", head=F)
readChar(name, file.info(fileName)$size)
readChar(name, file.info(name)$size)
text <- data.frame(index = c(), text = c())
text <- rbind(text, c(1809, readChar(name, file.info(name)$size)))
text
summary(text)
head(text)
text[1]
text[2]
text <- data.frame(index = c(), text=c())
for (i in 1:7368){
print(i)
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
readChar(name, file.info(name)$size)
}, warning=function(w) {
return('NA')
}, error=function(e) {
return('NA')
}, finally = {
})
t <- str_replace_all(t, '\n', '')
text = rbind(text, c(i, t))
}
text
i= 1
text <- data.frame(index = c(), text=c())
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
readChar(name, file.info(name)$size)
}, warning=function(w) {
return('NA')
}, error=function(e) {
return('NA')
}, finally = {
})
t
t <- str_replace_all(t, '\n', '')
t
text = rbind(text, c(i, t))
text
i = 2
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
readChar(name, file.info(name)$size)
}, warning=function(w) {
return('NA')
}, error=function(e) {
return('NA')
}, finally = {
})
t <- str_replace_all(t, '\n', '')
text = rbind(text, c(i, t))
text <- data.frame(index = c(), text=c(), colClasses=c('numeric', 'character'))
?data.frame
text <- data.frame(index = c(), text=c(), stringsAsFactors=FALSE)
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
readChar(name, file.info(name)$size)
}, warning=function(w) {
return('NA')
}, error=function(e) {
return('NA')
}, finally = {
})
t <- str_replace_all(t, '\n', '')
text = rbind(text, c(i, t))
text
i = 3
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
readChar(name, file.info(name)$size)
}, warning=function(w) {
return('NA')
}, error=function(e) {
return('NA')
}, finally = {
})
t <- str_replace_all(t, '\n', '')
text = rbind(text, c(i, t))
text <- data.frame(index = c(), text=c(), stringsAsFactors=FALSE)
for (i in 1:7368){
print(i)
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
t <- tryCatch({
readChar(name, file.info(name)$size)
}, warning=function(w) {
return('NA')
}, error=function(e) {
return('NA')
}, finally = {
})
t <- str_replace_all(t, '\n', '')
text = rbind(text, c(i, t))
names(text) <- c('index', 'text')
text$index <- as.numeric(text$index)
text$text <- as.character(text$text)
}
head(text)
text[42]
text[42,]
text[,42]
text[42,42]
library(dplyr)
filter(text, index=42)
filter(text, index==42)
write.csv(text,'articles.csv',row.names=FALSE)
nonempty_articles <- filter(text,text!='')
set.seed(111)
s <- sample(nonempty_articles$index,200)
s
sampled_articles <- nonempty[s,]
sampled_articles <- nonempty_articles[s,]
head(sampled_articles)
?write.csv
write.csv(sample_articels,'sample_articles.csv',row.names=FALSE, fileEncoding='utf-8')
write.csv(sample_articles,'sample_articles.csv',row.names=FALSE, fileEncoding='utf-8')
write.csv(sampled_articles,'sample_articles.csv',row.names=FALSE, fileEncoding='utf-8')
write.csv(sampled_articles,'sample_articles.csv',row.names=FALSE, fileEncoding='ascii')
head(sampled_articles)
head(sampled_articles)
sample_articles$text[1]
sampled_articles$text[1]
iconv(sampled_articles$text[1], 'utf-8', 'ascii')
iconv(sampled_articles$text[1], 'UTF-8', 'ASCII')
write.csv(sampled_articles,'sample_articles.csv',row.names=FALSE, fileEncoding='utf-8')
write.csv(sampled_articles,'sample_articles.csv',row.names=FALSE)
?readChar
write.csv(sampled_articles,'sample_articles.csv',row.names=FALSE, fileEncoding='UTF-8')
sampled_articles$text[1]
x <- sampled_articles$text[1]
x2 <- parse(text=paste0("'", x, "'"))
x3 <- x2[[1]]
x3
x <- str_replace_all(sampled_articles$text[1], '\u', '\\u')
x <- str_replace_all(sampled_articles$text[1], '/\u', '/\\u')
x <- str_replace_all(sampled_articles$text[1], '\\u', '\\\u')
sample_articles$indec[1]
sample_articles$index[1]
sampled_articles$index[1]
i = 4063
name <- paste('../../text_scraping/article_text/', i,'.txt',sep='')
x <- readChar(name, file.info(name)$size)
x
name
x <- sampled_articles$text[1]
x
x1 <- sampled_articles$text[1]
x2 <- parse(text = paste0("'", x1, "'"))
x3 <- x2[[1]]
x3
?write
# install packages and define parse function
if (!require('XML')) {install.packages('XML')}
if (!require('httr')) {install.packages('httr')}
# old parse function, article only
parseArticleBody <- function(artHTML) {
xpath2try <- c('//div[@class="articleBody"]//p',
'//p[@class="story-body-text story-content"]',
'//p[@class="story-body-text"]'
)
for(xp in xpath2try) {
bodyi <- paste(xpathSApply(htmlParse(artHTML), xp, xmlValue), collapse='')
if(nchar(bodyi)>0) break
}
return(bodyi)
}
# new parse function, dummy for video and interactive graph
parseArticleBody <- function(artHTML) {
xpath2try <- c('//div[@class="articleBody"]//p',
'//p[@class="story-body-text story-content"]',
'//p[@class="story-body-text"]'
)
for(xp in xpath2try) {
bodyi <- paste(xpathSApply(htmlParse(artHTML), xp, xmlValue), collapse='')
if(nchar(bodyi)>0) break
}
xpath <- c('//a[@class="video-link"]')
video <- paste(xpathSApply(htmlParse(artHTML), xpath, xmlValue), collapse='')
if (nchar(video)!= 0) {v <- 1} else {v <- 0}
ypath <- c('//div[@class="interactive-graphic"]')
graph <- paste(xpathSApply(htmlParse(artHTML), ypath, xmlValue), collapse='')
if (nchar(graph)!= 0) {g <- 1} else {g <- 0}
return(list(bodyi,v,g))
}
path_to_article_list <- 'article_list.txt'
#path_to_article_list <- '/srv/ml_project/article_list/9-list'
article_list <- read.csv(path_to_article_list, header=F)
names(article_list) <- c('article_url')
article_dummies <- data.frame(index = c(),
has_video = c(),
has_graph = c()
)
path_to_article_list <- '../../text_scraping/article_list.txt'
article_list <- read.csv(path_to_article_list, header=F)
names(article_list) <- c('article_url')
article_dummies <- data.frame(index = c(),
has_video = c(),
has_graph = c()
)
url <- GET(as.character(article_list$article_url[i]))
url
html <- content(url, 'text')
artBody <- parseArticleBody(html)
artBody
?parseArticleBody
?xpathSApply
?htmlParse
url
artBody
?GET
?content
html <- content(url, 'text', encoding='utf-8')
html
artBody <- parseArticleBody(html)
artBody
html <- content(url, 'text', encoding='unicode')
artBody
artBody <- parseArticleBody(html)
artBody
html <- content(url, 'text', encoding='unicode')
html <- content(url, 'text', encoding='utf-8')
artBody <- parseArticleBody(html)
artBody
html <- content(url, 'text')
artBody <- parseArticleBody(html)
artBody
stringi::stri_enc_detect(content(url, "raw")).
stringi::stri_enc_detect(content(url, "raw"))
?stri_enc_detect
html <- content(url, 'text', encoding='windows-1252')
html
artBody <- parseArticleBody(html)
html <- content(url, 'text', encoding='UTF-8')
html
artBody <- parseArticlebody(html)
artBody <- parseArticleBody(html)
artBody
xp <- '//div[@class="articleBody"]//p'
xpathSApply(htmlParse(artHTML), xp, xmlValue)
xpathSApply(htmlParse(html), xp, xmlValue)
xp <- '//p[@class="story-body-text story-content"]'
xpathSApply(htmlParse(html), xp, xmlValue)
parseArticleBody <- function(artHTML) {
xpath2try <- c('//div[@class="articleBody"]//p',
'//p[@class="story-body-text story-content"]',
'//p[@class="story-body-text"]'
)
for(xp in xpath2try) {
bodyi <- paste(xpathSApply(htmlParse(artHTML, asText=TRUE), xp, xmlValue), collapse='')
if(nchar(bodyi)>0) break
}
return(bodyi)
}
artBody <- parseArticleBody(html)
artBody
artBody
iconv(artBody, "utf-8", "latin1")
iconv(artBody, "utf-8", "unicode")
artBody <- "JAKARTA, Indonesia â\u0080\u0094 Indonesiaâ\u0080\u0099s anticorruption agency has arrested the head of the countryâ\u0080\u0099s oil and gas regulatory authority in connection with a bribery investigation, officials said Wednesday, in the latest setback for the countryâ\u0080\u0099s troubled energy sector."
artBody
iconv(artBody, 'utf-8', 'ascii')
iconv(artBody, 'utf-8', 'ASCII')
iconv(artBody, 'utf-8', 'latin1')
encoding(artBody)
Encoding(artBody)
Encoding(artBody) <- 'unknown'
iconv(artBody, 'unknown', 'utf-8')
artBody
all(stri_enc_isutf8(artBody))
library(stringi)
all(stri_enc_isutf8(artBody))
stri_encode(artBody, "", "UTF-8")
stri_encode(artBody, "UTF-8", "")
stri_encode(artBody, "UTF-8", "unicode")
library(rvest)
install.packages('rvest)
install.packages('rvest')
library(rvest)
library(rvest)
path_to_article_list <- 'article_list.txt'
#path_to_article_list <- '/srv/ml_project/article_list/9-list'
article_list <- read.csv(path_to_article_list, header=F)
names(article_list) <- c('article_url')
article_dummies <- data.frame(index = c(),
has_video = c(),
has_graph = c()
)
for (i in 1:length(article_list$article_url)) {
print(i)
}
html <- read_html(i)
?read_html
?rvest::read_html
library(rvest)
??read_html
detach(xml2)
detach(name='xml2')
?rvest
??rvest
library(rvest)
